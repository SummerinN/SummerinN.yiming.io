name: Deploy to GitHub Pages

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Build site
        run: |
          # 这里写你的构建命令，如果只是静态文件，可以简单地复制所有内容到 public 目录
          mkdir -p public
          cp -R . public
          # 如果不需要某些文件（例如 .git 目录），可以删除
          rm -rf public/.git

      - name: Upload site artifact
        uses: actions/upload-artifact@v4
        with:
          name: site-content
          path: public
          include-hidden-files: true

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download site artifact
        uses: actions/download-artifact@v4
        with:
          name: site-content

      - name: Deploy to GitHub Pages
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # 尝试克隆 gh-pages 分支，如果不存在则创建一个新的孤立分支
          if git ls-remote --exit-code origin gh-pages; then
            git clone --depth=1 --branch=gh-pages https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }} gh-pages
          else
            git clone https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }} gh-pages
            cd gh-pages
            git checkout --orphan gh-pages
            git rm -rf .
            cd ..
          fi
          cd gh-pages
          # 清空旧内容
          rm -rf *
          # 将上一步下载的构建内容复制到当前目录（下载后 artifact 会在工作区中以 site-content 目录存在）
          cp -R ../site-content/* .
          # 配置 Git 提交信息
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add .
          git commit -m "Deploy updated site" || echo "No changes to commit"
          git push origin gh-pages --force
